%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Tue Jun 11 08:58:21 2013
%%Title: /home/cyrille/programmation/rpi/matrix/newspaper/electronic/chipselect.sch
%%Author: cyrille
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 500 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
41700 49100 41700 49300 10 line
gsave
false false false false 208.000000 [(1) ] 90 41700 49450 144.444443 text
grestore
41700 49350 50 0 360 10 darc
42100 49100 42100 49300 10 line
gsave
false false false false 208.000000 [(2) ] 90 42100 49450 144.444443 text
grestore
42100 49350 50 0 360 10 darc
42500 49100 42500 49300 10 line
gsave
false false false false 208.000000 [(3) ] 90 42500 49450 144.444443 text
grestore
42500 49350 50 0 360 10 darc
42900 49100 42900 49300 10 line
gsave
false false false false 208.000000 [(4) ] 90 42900 49450 144.444443 text
grestore
42900 49350 50 0 360 10 darc
43300 49100 43300 49300 10 line
gsave
false false false false 208.000000 [(5) ] 90 43300 49450 144.444443 text
grestore
43300 49350 50 0 360 10 darc
43700 49100 43700 49300 10 line
gsave
false false false false 208.000000 [(6) ] 90 43700 49450 144.444443 text
grestore
43700 49350 50 0 360 10 darc
44100 49100 44100 49300 10 line
gsave
false false false false 208.000000 [(7) ] 90 44100 49450 144.444443 text
grestore
44100 49350 50 0 360 10 darc
44500 49100 44500 49300 10 line
gsave
false false false false 208.000000 [(8) ] 90 44500 49450 144.444443 text
grestore
44500 49350 50 0 360 10 darc
44900 49100 44900 49300 10 line
gsave
false false false false 208.000000 [(9) ] 90 44900 49450 144.444443 text
grestore
44900 49350 50 0 360 10 darc
45300 49100 45300 49300 10 line
gsave
false false false false 208.000000 [(10) ] 90 45300 49450 144.444443 text
grestore
45300 49350 50 0 360 10 darc
45700 49100 45700 49300 10 line
gsave
false false false false 208.000000 [(11) ] 90 45700 49450 144.444443 text
grestore
45700 49350 50 0 360 10 darc
46100 49100 46100 49300 10 line
gsave
false false false false 208.000000 [(12) ] 90 46100 49450 144.444443 text
grestore
46100 49350 50 0 360 10 darc
46500 49100 46500 49300 10 line
gsave
false false false false 208.000000 [(13) ] 90 46500 49450 144.444443 text
grestore
46500 49350 50 0 360 10 darc
46900 49100 46900 49300 10 line
gsave
false false false false 208.000000 [(14) ] 90 46900 49450 144.444443 text
grestore
46900 49350 50 0 360 10 darc
47300 49100 47300 49300 10 line
gsave
false false false false 208.000000 [(15) ] 90 47300 49450 144.444443 text
grestore
47300 49350 50 0 360 10 darc
47700 49100 47700 49300 10 line
gsave
false false false false 208.000000 [(16) ] 90 47700 49450 144.444443 text
grestore
47700 49350 50 0 360 10 darc
48100 49100 48100 49300 10 line
gsave
false false false false 208.000000 [(17) ] 90 48100 49450 144.444443 text
grestore
48100 49350 50 0 360 10 darc
48500 49100 48500 49300 10 line
gsave
false false false false 208.000000 [(18) ] 90 48500 49450 144.444443 text
grestore
48500 49350 50 0 360 10 darc
48900 49100 48900 49300 10 line
gsave
false false false false 208.000000 [(19) ] 90 48900 49450 144.444443 text
grestore
48900 49350 50 0 360 10 darc
49300 49100 49300 49300 10 line
gsave
false false false false 208.000000 [(20) ] 90 49300 49450 144.444443 text
grestore
49300 49350 50 0 360 10 darc
49700 49100 49700 49300 10 line
gsave
false false false false 208.000000 [(21) ] 90 49700 49450 144.444443 text
grestore
49700 49350 50 0 360 10 darc
50100 49100 50100 49300 10 line
gsave
false false false false 208.000000 [(22) ] 90 50100 49450 144.444443 text
grestore
50100 49350 50 0 360 10 darc
50500 49100 50500 49300 10 line
gsave
false false false false 208.000000 [(23) ] 90 50500 49450 144.444443 text
grestore
50500 49350 50 0 360 10 darc
50900 49100 50900 49300 10 line
gsave
false false false false 208.000000 [(24) ] 90 50900 49450 144.444443 text
grestore
50900 49350 50 0 360 10 darc
51300 49100 51300 49300 10 line
gsave
false false false false 208.000000 [(25) ] 90 51300 49450 144.444443 text
grestore
51300 49350 50 0 360 10 darc
51700 49100 51700 49300 10 line
gsave
false false false false 208.000000 [(26) ] 90 51700 49450 144.444443 text
grestore
51700 49350 50 0 360 10 darc
41300 49400 52100 49400 10 line
52100 49400 52100 49800 10 line
52100 49800 41300 49800 10 line
41300 49800 41300 49400 10 line
grestore
gsave
false true false false 260.000000 [(CONN1) ] 90 41200 49800 180.555557 text
grestore
gsave
47500 45100 47800 45100 10 line
gsave
false true false false 208.000000 [(1) ] 0 47700 45150 144.444443 text
grestore
gsave
false false false false 208.000000 [(A0) ] 0 47850 45100 144.444443 text
grestore
49500 45100 49300 45100 10 line
gsave
false false false false 208.000000 [(15) ] 0 49300 45150 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q0) ] 0 49150 45100 144.444443 text
grestore
49250 45100 50 0 360 10 darc
47500 44700 47800 44700 10 line
gsave
false true false false 208.000000 [(2) ] 0 47700 44750 144.444443 text
grestore
gsave
false false false false 208.000000 [(A1) ] 0 47850 44700 144.444443 text
grestore
49500 44700 49300 44700 10 line
gsave
false false false false 208.000000 [(14) ] 0 49300 44750 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q1) ] 0 49150 44700 144.444443 text
grestore
49250 44700 50 0 360 10 darc
47500 44300 47800 44300 10 line
gsave
false true false false 208.000000 [(3) ] 0 47700 44350 144.444443 text
grestore
gsave
false false false false 208.000000 [(A2) ] 0 47850 44300 144.444443 text
grestore
49500 44300 49300 44300 10 line
gsave
false false false false 208.000000 [(13) ] 0 49300 44350 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q2) ] 0 49150 44300 144.444443 text
grestore
49250 44300 50 0 360 10 darc
49500 43900 49300 43900 10 line
gsave
false false false false 208.000000 [(12) ] 0 49300 43950 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q3) ] 0 49150 43900 144.444443 text
grestore
49250 43900 50 0 360 10 darc
47500 43500 47700 43500 10 line
gsave
false true false false 208.000000 [(4) ] 0 47700 43550 144.444443 text
grestore
gsave
false false false false 208.000000 [(E0) ] 0 47850 43500 144.444443 text
grestore
47750 43500 50 0 360 10 darc
49500 43500 49300 43500 10 line
gsave
false false false false 208.000000 [(11) ] 0 49300 43550 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q4) ] 0 49150 43500 144.444443 text
grestore
49250 43500 50 0 360 10 darc
47500 43100 47700 43100 10 line
gsave
false true false false 208.000000 [(5) ] 0 47700 43150 144.444443 text
grestore
gsave
false false false false 208.000000 [(E1) ] 0 47850 43100 144.444443 text
grestore
47750 43100 50 0 360 10 darc
49500 43100 49300 43100 10 line
gsave
false false false false 208.000000 [(10) ] 0 49300 43150 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q5) ] 0 49150 43100 144.444443 text
grestore
49250 43100 50 0 360 10 darc
47500 42700 47800 42700 10 line
gsave
false true false false 208.000000 [(6) ] 0 47700 42750 144.444443 text
grestore
gsave
false false false false 208.000000 [(E2) ] 0 47850 42700 144.444443 text
grestore
49500 42700 49300 42700 10 line
gsave
false false false false 208.000000 [(9) ] 0 49300 42750 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q6) ] 0 49150 42700 144.444443 text
grestore
49250 42700 50 0 360 10 darc
49500 42300 49300 42300 10 line
gsave
false false false false 208.000000 [(7) ] 0 49300 42350 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q7) ] 0 49150 42300 144.444443 text
grestore
49250 42300 50 0 360 10 darc
47800 42100 49200 42100 10 line
49200 42100 49200 45400 10 line
49200 45400 47800 45400 10 line
47800 45400 47800 42100 10 line
gsave
false false false false 260.000000 [(74138) ] 0 47800 45440 180.555557 text
grestore
grestore
gsave
false true false false 260.000000 [(U1) ] 0 49200 45500 180.555557 text
grestore
gsave
55500 48900 55700 48900 10 line
gsave
false false false false 208.000000 [(1) ] 0 55850 48900 144.444443 text
grestore
55750 48900 50 0 360 10 darc
55500 48500 55700 48500 10 line
gsave
false false false false 208.000000 [(2) ] 0 55850 48500 144.444443 text
grestore
55750 48500 50 0 360 10 darc
55500 48100 55700 48100 10 line
gsave
false false false false 208.000000 [(3) ] 0 55850 48100 144.444443 text
grestore
55750 48100 50 0 360 10 darc
55500 47700 55700 47700 10 line
gsave
false false false false 208.000000 [(4) ] 0 55850 47700 144.444443 text
grestore
55750 47700 50 0 360 10 darc
55500 47300 55700 47300 10 line
gsave
false false false false 208.000000 [(5) ] 0 55850 47300 144.444443 text
grestore
55750 47300 50 0 360 10 darc
55500 46900 55700 46900 10 line
gsave
false false false false 208.000000 [(6) ] 0 55850 46900 144.444443 text
grestore
55750 46900 50 0 360 10 darc
55500 46500 55700 46500 10 line
gsave
false false false false 208.000000 [(7) ] 0 55850 46500 144.444443 text
grestore
55750 46500 50 0 360 10 darc
55500 46100 55700 46100 10 line
gsave
false false false false 208.000000 [(8) ] 0 55850 46100 144.444443 text
grestore
55750 46100 50 0 360 10 darc
55500 45700 55700 45700 10 line
gsave
false false false false 208.000000 [(9) ] 0 55850 45700 144.444443 text
grestore
55750 45700 50 0 360 10 darc
55500 45300 55700 45300 10 line
gsave
false false false false 208.000000 [(10) ] 0 55850 45300 144.444443 text
grestore
55750 45300 50 0 360 10 darc
55500 44900 55700 44900 10 line
gsave
false false false false 208.000000 [(11) ] 0 55850 44900 144.444443 text
grestore
55750 44900 50 0 360 10 darc
55500 44500 55700 44500 10 line
gsave
false false false false 208.000000 [(12) ] 0 55850 44500 144.444443 text
grestore
55750 44500 50 0 360 10 darc
55500 44100 55700 44100 10 line
gsave
false false false false 208.000000 [(13) ] 0 55850 44100 144.444443 text
grestore
55750 44100 50 0 360 10 darc
55500 43700 55700 43700 10 line
gsave
false false false false 208.000000 [(14) ] 0 55850 43700 144.444443 text
grestore
55750 43700 50 0 360 10 darc
55500 43300 55700 43300 10 line
gsave
false false false false 208.000000 [(15) ] 0 55850 43300 144.444443 text
grestore
55750 43300 50 0 360 10 darc
55500 42900 55700 42900 10 line
gsave
false false false false 208.000000 [(16) ] 0 55850 42900 144.444443 text
grestore
55750 42900 50 0 360 10 darc
55800 42500 56200 42500 10 line
56200 42500 56200 49300 10 line
56200 49300 55800 49300 10 line
55800 49300 55800 42500 10 line
grestore
gsave
false true false false 260.000000 [(CONN3) ] 0 56200 49400 180.555557 text
grestore
50100 48600 50100 49100 10 line
gsave
46100 43300 46300 43300 10 line
46100 43400 46100 43200 10 line
46050 43345 46050 43255 10 line
46010 43320 46010 43280 10 line
grestore
47500 43500 47000 43500 10 line
47000 43100 47000 43500 10 line
47000 43300 46300 43300 10 line
47000 43100 47500 43100 10 line
47300 48600 47300 49100 10 line
47700 48600 47700 49100 10 line
48500 48600 48500 49100 10 line
gsave
42700 47400 42700 47600 10 line
42550 47600 42850 47600 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 42575 47650 144.444443 text
grestore
grestore
42100 49100 42100 47100 10 line
42100 47100 42700 47100 10 line
42700 47100 42700 47400 10 line
55400 48900 55500 48900 10 line
55400 48500 55500 48500 10 line
55400 47700 55500 47700 10 line
gsave
50500 48600 50500 48400 10 line
50600 47900 50500 47800 10 line
50500 47800 50400 47900 10 line
50500 48400 50400 48300 10 line
50600 48300 50500 48400 10 line
50600 48300 50600 47900 10 line
50400 48300 50400 47900 10 line
grestore
gsave
false false false false 260.000000 [(net=SCLK:1) ] 270 50600 47700 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 270 50500 47700 180.555557 text
grestore
gsave
45300 48600 45300 48400 10 line
45400 47900 45300 47800 10 line
45300 47800 45200 47900 10 line
45300 48400 45200 48300 10 line
45400 48300 45300 48400 10 line
45400 48300 45400 47900 10 line
45200 48300 45200 47900 10 line
grestore
gsave
false false false false 260.000000 [(net=MOSI:1) ] 270 45400 47700 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 270 45300 47700 180.555557 text
grestore
45300 49100 45300 48600 10 line
50500 49100 50500 48600 10 line
gsave
47300 48600 47300 48400 10 line
47400 47900 47300 47800 10 line
47300 47800 47200 47900 10 line
47300 48400 47200 48300 10 line
47400 48300 47300 48400 10 line
47400 48300 47400 47900 10 line
47200 48300 47200 47900 10 line
grestore
gsave
false false false false 260.000000 [(net=CS0:1) ] 270 47400 47700 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 270 47300 47700 180.555557 text
grestore
gsave
47700 48600 47700 48400 10 line
47800 47900 47700 47800 10 line
47700 47800 47600 47900 10 line
47700 48400 47600 48300 10 line
47800 48300 47700 48400 10 line
47800 48300 47800 47900 10 line
47600 48300 47600 47900 10 line
grestore
gsave
false false false false 260.000000 [(net=CS1:1) ] 270 47800 47700 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 270 47700 47700 180.555557 text
grestore
gsave
48500 48600 48500 48400 10 line
48600 47900 48500 47800 10 line
48500 47800 48400 47900 10 line
48500 48400 48400 48300 10 line
48600 48300 48500 48400 10 line
48600 48300 48600 47900 10 line
48400 48300 48400 47900 10 line
grestore
gsave
false false false false 260.000000 [(net=CS2:1) ] 270 48600 47700 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 270 48500 47700 180.555557 text
grestore
gsave
47100 45100 46900 45100 10 line
46400 45000 46300 45100 10 line
46300 45100 46400 45200 10 line
46900 45100 46800 45200 10 line
46800 45000 46900 45100 10 line
46800 45000 46400 45000 10 line
46800 45200 46400 45200 10 line
grestore
gsave
false true false true 260.000000 [(net=CS0:1) ] 0 46200 45000 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 46200 45100 180.555557 text
grestore
gsave
47100 44700 46900 44700 10 line
46400 44600 46300 44700 10 line
46300 44700 46400 44800 10 line
46900 44700 46800 44800 10 line
46800 44600 46900 44700 10 line
46800 44600 46400 44600 10 line
46800 44800 46400 44800 10 line
grestore
gsave
false true false true 260.000000 [(net=CS1:1) ] 0 46200 44600 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 46200 44700 180.555557 text
grestore
gsave
47100 44300 46900 44300 10 line
46400 44200 46300 44300 10 line
46300 44300 46400 44400 10 line
46900 44300 46800 44400 10 line
46800 44200 46900 44300 10 line
46800 44200 46400 44200 10 line
46800 44400 46400 44400 10 line
grestore
gsave
false true false true 260.000000 [(net=CS2:1) ] 0 46200 44200 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 46200 44300 180.555557 text
grestore
47100 45100 47500 45100 10 line
47100 44700 47500 44700 10 line
47100 44300 47500 44300 10 line
gsave
50100 48600 50100 48400 10 line
50200 47900 50100 47800 10 line
50100 47800 50000 47900 10 line
50100 48400 50000 48300 10 line
50200 48300 50100 48400 10 line
50200 48300 50200 47900 10 line
50000 48300 50000 47900 10 line
grestore
gsave
false false false false 260.000000 [(net=EN:1) ] 270 50200 47700 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 270 50100 47700 180.555557 text
grestore
gsave
47100 42700 46900 42700 10 line
46400 42600 46300 42700 10 line
46300 42700 46400 42800 10 line
46900 42700 46800 42800 10 line
46800 42600 46900 42700 10 line
46800 42600 46400 42600 10 line
46800 42800 46400 42800 10 line
grestore
gsave
false true false true 260.000000 [(net=EN:1) ] 0 46200 42600 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 46200 42700 180.555557 text
grestore
47100 42700 47500 42700 10 line
gsave
55400 46500 55200 46500 10 line
54700 46400 54600 46500 10 line
54600 46500 54700 46600 10 line
55200 46500 55100 46600 10 line
55100 46400 55200 46500 10 line
55100 46400 54700 46400 10 line
55100 46600 54700 46600 10 line
grestore
gsave
false true false true 260.000000 [(net=MOSI:1) ] 0 54500 46400 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 54500 46500 180.555557 text
grestore
gsave
55400 47300 55200 47300 10 line
54700 47200 54600 47300 10 line
54600 47300 54700 47400 10 line
55200 47300 55100 47400 10 line
55100 47200 55200 47300 10 line
55100 47200 54700 47200 10 line
55100 47400 54700 47400 10 line
grestore
gsave
false true false true 260.000000 [(net=SCLK:1) ] 0 54500 47200 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 54500 47300 180.555557 text
grestore
gsave
55400 48100 55200 48100 10 line
54700 48000 54600 48100 10 line
54600 48100 54700 48200 10 line
55200 48100 55100 48200 10 line
55100 48000 55200 48100 10 line
55100 48000 54700 48000 10 line
55100 48200 54700 48200 10 line
grestore
gsave
false true false true 260.000000 [(net=MCS0:1) ] 0 54500 48000 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 54500 48100 180.555557 text
grestore
gsave
55400 48900 55200 48900 10 line
54700 48800 54600 48900 10 line
54600 48900 54700 49000 10 line
55200 48900 55100 49000 10 line
55100 48800 55200 48900 10 line
55100 48800 54700 48800 10 line
55100 49000 54700 49000 10 line
grestore
gsave
false true false true 260.000000 [(net=MCS1:1) ] 0 54500 48800 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 54500 48900 180.555557 text
grestore
gsave
55400 48500 55200 48500 10 line
54700 48400 54600 48500 10 line
54600 48500 54700 48600 10 line
55200 48500 55100 48600 10 line
55100 48400 55200 48500 10 line
55100 48400 54700 48400 10 line
55100 48600 54700 48600 10 line
grestore
gsave
false true false true 260.000000 [(net=MCS2:1) ] 0 54500 48400 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 54500 48500 180.555557 text
grestore
gsave
55400 47700 55200 47700 10 line
54700 47600 54600 47700 10 line
54600 47700 54700 47800 10 line
55200 47700 55100 47800 10 line
55100 47600 55200 47700 10 line
55100 47600 54700 47600 10 line
55100 47800 54700 47800 10 line
grestore
gsave
false true false true 260.000000 [(net=MCS3:1) ] 0 54500 47600 180.555557 text
grestore
gsave
false true true false 260.000000 [(IO) ] 0 54500 47700 180.555557 text
grestore
gsave
49700 45100 49900 45100 10 line
50400 45200 50500 45100 10 line
50500 45100 50400 45000 10 line
49900 45100 50000 45000 10 line
50000 45200 49900 45100 10 line
50000 45200 50400 45200 10 line
50000 45000 50400 45000 10 line
grestore
gsave
false false false false 260.000000 [(net=MCS0:1) ] 0 50600 45200 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 0 50600 45100 180.555557 text
grestore
gsave
49700 44700 49900 44700 10 line
50400 44800 50500 44700 10 line
50500 44700 50400 44600 10 line
49900 44700 50000 44600 10 line
50000 44800 49900 44700 10 line
50000 44800 50400 44800 10 line
50000 44600 50400 44600 10 line
grestore
gsave
false false false false 260.000000 [(net=MCS1:1) ] 0 50600 44800 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 0 50600 44700 180.555557 text
grestore
gsave
49700 44300 49900 44300 10 line
50400 44400 50500 44300 10 line
50500 44300 50400 44200 10 line
49900 44300 50000 44200 10 line
50000 44400 49900 44300 10 line
50000 44400 50400 44400 10 line
50000 44200 50400 44200 10 line
grestore
gsave
false false false false 260.000000 [(net=MCS2:1) ] 0 50600 44400 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 0 50600 44300 180.555557 text
grestore
gsave
49700 43900 49900 43900 10 line
50400 44000 50500 43900 10 line
50500 43900 50400 43800 10 line
49900 43900 50000 43800 10 line
50000 44000 49900 43900 10 line
50000 44000 50400 44000 10 line
50000 43800 50400 43800 10 line
grestore
gsave
false false false false 260.000000 [(net=MCS3:1) ] 0 50600 44000 180.555557 text
grestore
gsave
false false true false 260.000000 [(IO) ] 0 50600 43900 180.555557 text
grestore
55400 48100 55500 48100 10 line
55400 47300 55500 47300 10 line
55400 46500 55500 46500 10 line
49700 45100 49500 45100 10 line
49700 44700 49500 44700 10 line
49700 44300 49500 44300 10 line
49700 43900 49500 43900 10 line
gsave
51300 48400 51300 48600 10 line
51200 48400 51400 48400 10 line
51255 48350 51345 48350 10 line
51280 48310 51320 48310 10 line
grestore
gsave
55000 46100 55200 46100 10 line
55000 46200 55000 46000 10 line
54950 46145 54950 46055 10 line
54910 46120 54910 46080 10 line
grestore
55200 46100 55500 46100 10 line
51300 48600 51300 49100 10 line
newpath
47000 43300
25
0 360 arc
fill
newpath
47000 43300
25
0 360 arc
fill
newpath
47000 43300
25
0 360 arc
fill
showpage
%%End
